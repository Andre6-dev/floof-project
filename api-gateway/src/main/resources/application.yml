spring:
  application:
    name: api-gateway
  security:
    oauth2:
      client:
        registration:
          floofle-gateway:
            provider: spring
            client-id: floofle-client
            client-secret: secret
            authorization-grant-type: authorization_code
            redirect-uri: http://127.0.0.1:8090/login/oauth2/code/floofle-gateway
            scope: read,write,openid,profile
        provider:
          spring:
            issuer-uri: http://localhost:9000

  cloud:
    gateway:
      routes:
        - id: pets-service-route
          uri: lb://pets-microservice
          predicates:
            - Path=/api/v1/breeds/**
          filters:
            - name: Retry
              args:
                retries: 5
                methods: GET
                backoff:
                  firstBackoff: 50ms
                  maxBackOff: 400ms
            - name: CircuitBreaker
              args:
                name: petsService
                fallbackUri: forward:/pets-service-fallback
            - name: RequestRateLimiter
              args:
                key-resolver: "#{@userKeyResolver}"
                redis-rate-limiter.replenishRate: 1
                redis-rate-limiter.burstCapacity: 1

        - id: angular
          uri: http://localhost:4200/
          predicates:
              - Path=/**

      default-filters:
        - TokenRelay=


  data:
    redis:
      port: ${REDIS_SERVER_PORT:6379}
      host: ${REDIS_SERVER_HOST:localhost}

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka
    fetch-registry: true
    register-with-eureka: true

server:
  port: 8090

resilience4j:
  circuitbreaker:
    configs:
      default:
        slidingWindowSize: 10
        slidingWindowType: COUNT_BASED
        permittedNumberOfCallsInHalfOpenState: 6
        failureRateThreshold: 50
        waitDurationInOpenState: 10s
        registerHealthIndicator: true
        automaticTransitionFromOpenToHalfOpenEnabled: true

    instances:
      petsService:
        baseConfig: default

  retry:
    instances:
      authorizationServer:
        maxAttempts: 3
        waitDuration: 2500ms
        enableExponentialBackoff: true
        exponentialBackoffMultiplier: 2

  timelimiter:
    configs:
      values:
        timeout-duration: 3s
    instances:
      offersTimeLimiter: # Unique name for TimeLimiter
        base-config: values

management:
  health:
    circuitbreakers:
      enabled: true
  endpoint:
    health:
      show-details: always
